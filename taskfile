#!/bin/bash

OWNER="prop_aks"
EMAIL="tls@m.brenwell.com"

function repositories { 
  # Add the repositories
  helm repo add jetstack https://charts.jetstack.io
  helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
  helm repo add bitnami https://charts.bitnami.com/bitnami
  helm repo add 1password https://1password.github.io/connect-helm-charts/
  helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
  helm repo add grafana https://grafana.github.io/helm-charts
  helm repo update
}

function cert-manager { 
  # Install cert-manager
  helm upgrade --install cert-manager jetstack/cert-manager \
    --namespace cert-manager \
    --create-namespace \
    --set crds.enabled=true \
    --set extraArgs='{--dns01-recursive-nameservers-only,--dns01-recursive-nameservers=1.1.1.1:53,1.0.0.1:53}' \
    --wait \
    ${1:-}
}

function ingress-nginx { 
  # Install ingress-nginx
  helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
    --namespace ingress-nginx \
    --create-namespace \
    --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz \
    --set controller.service.externalTrafficPolicy=Local \
    --wait \
    ${1:-}
}

function external-dns { 
  # Install external-dns
  helm upgrade --install external-dns bitnami/external-dns \
    --namespace external-dns \
    --create-namespace \
    --values ./values/external-dns.yaml \
    --set cloudflare.apiToken=$CLOUDFLARE_SECRET \
    --wait \
    ${1:-}
}

function atlas-operator {
  # Install atlas-operator
  helm upgrade --install atlas-operator oci://ghcr.io/ariga/charts/atlas-operator \
    --namespace atlas-operator \
    --create-namespace \
    --wait \
    ${1:-}
}

function one-password {
  # Install one-password operator
  helm upgrade --install connect 1password/connect \
    --namespace one-password \
    --create-namespace \
    --values ./values/one-password.yaml \
    --set connect.credentials_base64=$OP_CREDENTIALS_B64 \
    --set operator.token.value=$OP_CONNECT_TOKEN \
    --wait \
    ${1:-}
}

function prometheus {
  # Install Prometheus, Grafana & Alertmanager
  helm upgrade --install kube-prometheus prometheus-community/kube-prometheus-stack \
    --namespace monitoring \
    --create-namespace \
    --values ./values/prometheus.yaml \
    --set grafana.adminPassword=$GRAFANA_PASSWORD \
    --set alertmanager.config.global.slack_api_url=$SLACK_WEBHOOK_URL \
    --wait \
    ${1:-}
}

function loki {
  # Install Loki & Promtail
  helm upgrade --install loki grafana/loki-stack \
    --namespace logging \
    --create-namespace \
    --values ./values/loki.yaml \
    --wait \
    ${1:-}
}

function tempo {
  # Install Tempo
  helm upgrade --install tempo grafana/tempo \
    --namespace observability \
    --create-namespace \
    --wait \
    ${1:-}
}

function arc {
  # Install the Github ARC controller
  helm upgrade --install arc \
    --namespace arc \
    --create-namespace \
    oci://ghcr.io/actions/actions-runner-controller-charts/gha-runner-scale-set-controller \
    --wait \
    ${1:-}
}

function arc-runners {
  # Install the Github ARC runners
  helm upgrade --install arc-runners \
    --namespace arc-runners \
    --create-namespace \
    --values ./values/arc.yaml \
    oci://ghcr.io/actions/actions-runner-controller-charts/gha-runner-scale-set \
    --wait \
    ${1:-}
}

function redis {
  # Install Redis
  helm upgrade --install my-redis bitnami/redis \
    --namespace redis \
    --create-namespace \
    --values ./values/redis.yaml \
    --set auth.password=$REDIS_PASSWORD \
    --wait \
    ${1:-}
}

function postgres-exporter {
  # Install Postgres Exporter
  helm upgrade --install postgres-exporter prometheus-community/prometheus-postgres-exporter \
    --namespace monitoring \
    --values ./values/postgres-exporter.yaml \
    --wait \
    ${1:-}
}

function redis-exporter {
  # Install Redis Exporter
  helm upgrade --install redis-exporter prometheus-community/prometheus-redis-exporter \
    --namespace monitoring \
    --values ./values/redis-exporter.yaml \
    --set redis.password=$REDIS_PASSWORD \
    --set auth.redisPassword=$REDIS_PASSWORD \
    --wait \
    ${1:-}
}

function secrets { 
  # Install secrets
  helm upgrade --install secrets ./secrets --wait ${1:-}
}

function tooling { 
  # Install tooling
  helm upgrade --install tooling ./tooling \
    --set cloudflare=$CLOUDFLARE_SECRET \
    --set email=$EMAIL \
    --set db_password=$DB_PASSWORD \
    --set atlas_token=$ATLAS_TOKEN \
    --wait \
    ${1:-}
}

# ---------- Do NOT edit below --------------

function help { ## Display usage for this application
  echo "$0 <task> [--dry-run]"
  grep -E '^function [a-zA-Z_-]+ {.*?## .*$$' $0 | sed -e 's/function //' | sort | awk 'BEGIN {FS = "{.*?## "}; {printf "\033[93m%-30s\033[92m %s\033[0m\n", $1, $2}'
}

TIMEFORMAT="Task completed in %3lR"
time ${@:-help}