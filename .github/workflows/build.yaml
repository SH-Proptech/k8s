name: Provision Infrastructure

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Validate that all required secrets are present
      - name: Validate Secrets
        shell: bash
        env:
          ATLAS_TOKEN: ${{ secrets.ATLAS_TOKEN }}
          AZURE_CREDS: ${{ secrets.AZURE_CREDS }}
          CLOUDFLARE_SECRET: ${{ secrets.CLOUDFLARE_SECRET }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          GRAFANA_PASSWORD: ${{ secrets.GRAFANA_PASSWORD }}
          GRAFANA_RW_DB_PASSWORD: ${{ secrets.GRAFANA_RW_DB_PASSWORD }}
          OP_CONNECT_TOKEN: ${{ secrets.OP_CONNECT_TOKEN }}
          OP_CREDENTIALS_B64: ${{ secrets.OP_CREDENTIALS_B64 }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          REQUIRED_SECRETS=(
            ATLAS_TOKEN
            AZURE_CREDS
            CLOUDFLARE_SECRET
            DB_PASSWORD
            GRAFANA_PASSWORD
            GRAFANA_RW_DB_PASSWORD
            OP_CONNECT_TOKEN
            OP_CREDENTIALS_B64
            REDIS_PASSWORD
            SLACK_WEBHOOK_URL
          )
          
          for secret in "${REQUIRED_SECRETS[@]}"; do
            secret_value="${!secret}"
            if [[ -z "$secret_value" ]]; then
              echo "Missing required secret: $secret"
              exit 1
            fi
          done

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDS }}

      - name: Gets K8s context
        uses: azure/aks-set-context@v4
        with:
          resource-group: prop_rg
          cluster-name: prop_aks

      - name: Update repositories
        run: ./taskfile repositories
      
      - name: Install one-password
        run: ./taskfile one-password
        env:
          OP_CREDENTIALS_B64: ${{ secrets.OP_CREDENTIALS_B64 }} 
          OP_CONNECT_TOKEN: ${{ secrets.OP_CONNECT_TOKEN }} 

      - name: Install secrets
        run: ./taskfile secrets

      - name: Install cert-manager
        run: ./taskfile cert-manager
      
      - name: Install ingress-nginx
        run: ./taskfile ingress-nginx

      - name: Install external-dns 
        run: ./taskfile external-dns
        env:
          CLOUDFLARE_SECRET: ${{ secrets.CLOUDFLARE_SECRET }} 

      - name: Install atlas-operator
        run: ./taskfile atlas-operator

      - name: Install prometheus
        run: ./taskfile prometheus
        env:
          GRAFANA_PASSWORD: ${{ secrets.GRAFANA_PASSWORD }} 
          GRAFANA_RW_DB_PASSWORD: ${{ secrets.GRAFANA_RW_DB_PASSWORD }} 
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Install loki
        run: ./taskfile loki

      - name: Install tempo
        run: ./taskfile tempo

      - name: Install Github ARC
        run: ./taskfile arc

      - name: Install Github ARC Runners
        run: ./taskfile arc-runners

      - name: Install redis
        run: ./taskfile redis
        env:
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }} 

      - name: Install redis-exporter
        run: ./taskfile redis-exporter
        env:
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }} 

      - name: Install postgres-exporter
        run: ./taskfile postgres-exporter

      - name: Install tooling
        run: ./taskfile tooling
        env:
          CLOUDFLARE_SECRET: ${{ secrets.CLOUDFLARE_SECRET }} 
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }} 
          ATLAS_TOKEN: ${{ secrets.ATLAS_TOKEN }} 
